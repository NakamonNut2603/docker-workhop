pipeline {
    agent any
    parameters {
        string(name: 'VERSION_TO_DEPLOY', defaultValue: '', description: '')
        choice(choices: ['dev', 'sit'], description: 'Choose environment', name: 'ENVIRONMENT')
    }
    environment {
        VERSION = "${params.VERSION_TO_DEPLOY}"
    }
    stages {
        stage('Generate Manifest') {
            steps {
                sh 'echo "Generate Manifest"'
                sh 'helm template helm --values helm/values.yaml --output-dir helm --debug'
                sh 'mv helm/helm/templates/deployment.yaml helm'
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                sh 'echo "Deploy to Kubernetes"'
                sh 'kubectl create secret generic env-secret --from-file=.env=config/${params.ENVIRONMENT}.env -n jenkins-to-kube --dry-run=client -o yaml > env-secret.yaml'
                sh 'kubectl apply -f env-secret.yaml -n jenkins-to-kube'
                sh 'kubectl apply -f deployment.yaml -n jenkins-to-kube'
            }
        }
    }
    post {
        cleanup {
            sh 'echo "Clean up Workspace"'
            cleanWs()
        }
    }
}